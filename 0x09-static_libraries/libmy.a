#!/bin/bash
// _putchar.c
int _putchar(char c) {
    return putchar(c);
}

// _islower.c
int _islower(int c) {
    return c >= 'a' && c <= 'z';
}

// _isalpha.c
int _isalpha(int c) {
    return _islower(c) || _isupper(c);
}

// _abs.c
int _abs(int n) {
    return n < 0 ? -n : n;
}

// _isupper.c
int _isupper(int c) {
    return c >= 'A' && c <= 'Z';
}

// _isdigit.c
int _isdigit(int c) {
    return c >= '0' && c <= '9';
}

// _strlen.c
int _strlen(char *s) {
    int len = 0;
    while (*s++) len++;
    return len;
}

// _puts.c
void _puts(char *s) {
    while (*s) _putchar(*s++);
    _putchar('\n');
}

// _strcpy.c
char *_strcpy(char *dest, char *src) {
    char *ret = dest;
    while (*src) *dest++ = *src++;
    *dest = '\0';
    return ret;
}

// _atoi.c
int _atoi(char *s) {
    int sign = 1;
    int num = 0;

    if (*s == '-') {
        sign = -1;
        s++;
    }

    while (_isdigit(*s)) {
        num = num * 10 + (*s - '0');
        s++;
    }

    return num * sign;
}

// _strcat.c
char *_strcat(char *dest, char *src) {
    char *ret = dest;
    while (*dest) dest++;
    while (*src) *dest++ = *src++;
    *dest = '\0';
    return ret;
}

// _strncat.c
char *_strncat(char *dest, char *src, int n) {
    char *ret = dest;
    while (*dest) dest++;
    while (*src && n--) *dest++ = *src++;
    *dest = '\0';
    return ret;
}

// _strncpy.c
char *_strncpy(char *dest, char *src, int n) {
    char *ret = dest;
    while (*src && n--) *dest++ = *src++;
    while (n--) *dest++ = '\0';
    return ret;
}

// _strcmp.c
int _strcmp(char *s1
